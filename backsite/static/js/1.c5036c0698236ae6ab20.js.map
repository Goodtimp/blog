{"version":3,"sources":["webpack:///src/components/tools/Header.vue","webpack:///./src/components/tools/Header.vue?016c","webpack:///./src/components/tools/Header.vue","webpack:///src/components/share/Upload.vue","webpack:///./src/components/share/Upload.vue?7397","webpack:///./src/components/share/Upload.vue","webpack:///./src/components/tools/ExifMain.vue?60d9","webpack:///./src/components/tools/ExifMain.vue","webpack:///src/components/tools/Exif.vue","webpack:///./src/components/tools/Exif.vue?ba1e","webpack:///./src/components/tools/Exif.vue","webpack:///src/components/tools/ExifMain.vue","webpack:///./node_modules/exif-js/exif.js"],"names":["tools_Header","render","_h","this","$createElement","_c","_self","staticClass","_v","_s","ToolName","staticStyle","font-size","introduction","staticRenderFns","Component","__webpack_require__","normalizeComponent","data","props","ssrContext","__webpack_exports__","Upload","imageUrl","methods","handleAvatarSuccess","res","file","URL","createObjectURL","raw","$emit","beforeAvatarUpload","isJPG","type","isLt2M","size","$message","error","share_Upload","attrs","action","show-file-list","on-success","before-upload","name","src","id","tools_ExifMain","_vm","text-align","margin","text-indent","href","on","child-msg","getpath","click","getExif","_l","index","item","active","simple","title","icon","__vue_styles__","components_tools_ExifMain","ExifMain","Exif","components","v-aside","ElAside","v-main","tools_Exif","height","Exif_Component","Exif_normalizeComponent","imagepath","val","img","$","get","message","temp","__WEBPACK_IMPORTED_MODULE_0_exif_js___default","a","getData","unshift","getAllTags","v-header","__WEBPACK_IMPORTED_MODULE_1__Header__","v-upload","__WEBPACK_IMPORTED_MODULE_2__share_Upload__","__WEBPACK_AMD_DEFINE_RESULT__","debug","EXIF","obj","EXIFwrapped","module","exports","ExifTags","Tags","36864","40960","40961","40962","40963","37121","37122","37500","37510","40964","36867","36868","37520","37521","37522","33434","33437","34850","34852","34855","34856","37377","37378","37379","37380","37381","37382","37383","37384","37385","37396","37386","41483","41484","41486","41487","41488","41492","41493","41495","41728","41729","41730","41985","41986","41987","41988","41989","41990","41991","41992","41993","41994","41995","41996","40965","42016","TiffTags","256","257","34665","34853","258","259","262","274","277","284","530","531","282","283","296","273","278","279","513","514","301","318","319","529","532","306","270","271","272","305","315","33432","GPSTags","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","IFD1Tags","StringValues","ExposureProgram","MeteringMode","255","LightSource","Flash","31","32","65","69","71","73","77","79","89","93","95","SensingMethod","SceneCaptureType","SceneType","CustomRendered","WhiteBalance","GainControl","Contrast","Saturation","Sharpness","SubjectDistanceRange","FileSource","Components","imageHasData","getImageData","callback","handleBinaryFile","binFile","findEXIFinJPEG","exifdata","iptcdata","dataView","DataView","console","log","byteLength","getUint8","offset","length","isFieldSegmentStart","nameHeaderLength","startOffset","sectionLength","getUint16","readIPTCData","findIPTCinJPEG","isXmpEnabled","xmpdata","self","dom","DOMParser","getStringFromDB","xmpString","xmpEndIndex","indexOf","indexOfXmp","substring","slice","domDocument","parseFromString","xml2Object","findXMPinJPEG","call","test","base64","contentType","match","replace","binary","atob","len","buffer","ArrayBuffer","view","Uint8Array","i","charCodeAt","base64ToArrayBuffer","fileReader","FileReader","onload","e","target","result","url","http","XMLHttpRequest","open","responseType","status","response","send","objectURLToBlob","blob","readAsArrayBuffer","Blob","File","marker","readEXIFData","IptcFieldMap","120","110","55","80","85","122","105","116","fieldValue","fieldName","dataSize","segmentType","segmentStartPos","getInt16","hasOwnProperty","Array","push","readTags","tiffStart","dirStart","strings","bigEnd","entryOffset","tag","entries","tags","readTagValue","vals","n","numerator","denominator","numValues","getUint32","valueOffset","Number","getInt32","start","outstr","String","fromCharCode","exifData","gpsData","tiffOffset","firstIFDOffset","ExifIFDPointer","GPSInfoIFDPointer","IFD1OffsetPointer","getNextIFDOffset","thumbTags","JpegIFOffset","JpegIFByteCount","tOffset","tLength","readThumbnailImage","xml2json","xml","json","nodeType","attributes","j","attribute","nodeName","nodeValue","hasChildNodes","childNodes","child","old","children","idx","itemAtt","dataKey","dataValue","undefined","textContent","enableXmp","disableXmp","Image","HTMLImageElement","complete","getTag","getIptcTag","getAllIptcTags","pretty","strPretty","readFromBinaryFile","apply"],"mappings":"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","file":"static/js/1.c5036c0698236ae6ab20.js","sourcesContent":["<template>\r\n  <div class=\"my-toolheader\">\r\n    <h1>\r\n        {{ToolName}} \r\n      <br/>\r\n      <small style=\"font-size:0.5em;\">{{introduction}}</small></h1>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data(){\r\n    return{\r\n    }\r\n  },\r\n  props:['ToolName','introduction']\r\n}\r\n</script>\r\n<style>\r\n  .my-toolheader{\r\n    text-align: center;\r\n    height: 4em;\r\n    margin-bottom: 2em;\r\n  }\r\n  .my-toolheader h1{\r\n    font-family: \"KaiTi\",\"Helvetica Neue\",Helvetica,\"PingFang SC\",\"Hiragino Sans GB\",\"Microsoft YaHei\",\"\\5FAE\\8F6F\\96C5\\9ED1\",Arial,sans-serif;\r\n    font-size: 2em;\r\n  }\r\n  .my-toolheader h1 small{\r\n   \r\n    color:#333;\r\n    font-family: \"Helvetica Neue\",Helvetica,\"PingFang SC\",\"Hiragino Sans GB\",\"Microsoft YaHei\",\"\\5FAE\\8F6F\\96C5\\9ED1\",Arial,sans-serif;\r\n  }\r\n</style>\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/tools/Header.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"my-toolheader\"},[_c('h1',[_vm._v(\"\\n      \"+_vm._s(_vm.ToolName)+\" \\n    \"),_c('br'),_vm._v(\" \"),_c('small',{staticStyle:{\"font-size\":\"0.5em\"}},[_vm._v(_vm._s(_vm.introduction))])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-0bbf835e\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/tools/Header.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0bbf835e\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Header.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Header.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Header.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0bbf835e\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Header.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/tools/Header.vue\n// module id = null\n// module chunks = ","<template>\r\n  <el-upload\r\n    class=\"avatar-uploader\"\r\n    action=\"http://47.107.80.19/api/upload/\"\r\n    :show-file-list=\"false\"\r\n    :on-success=\"handleAvatarSuccess\"\r\n    :before-upload=\"beforeAvatarUpload\"\r\n    name=\"userfile\"\r\n  >\r\n    <img\r\n      v-if=\"imageUrl\"\r\n      :src=\"imageUrl\"\r\n      class=\"avatar\"\r\n      id=\"uploadImage\"\r\n    >\r\n    <i\r\n      v-else\r\n      class=\"el-icon-plus avatar-uploader-icon\"\r\n    ></i>\r\n  </el-upload>\r\n</template>\r\n<style>\r\n.avatar-uploader .el-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n.avatar-uploader .el-upload:hover {\r\n  border-color: #409eff;\r\n}\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 178px;\r\n  height: 178px;\r\n  line-height: 178px;\r\n  text-align: center;\r\n}\r\n.avatar {\r\n  width: 178px;\r\n  height: 178px;\r\n  display: block;\r\n}\r\n</style>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      imageUrl: ''\r\n    };\r\n  },\r\n  methods: {\r\n    handleAvatarSuccess(res, file) {\r\n      this.imageUrl = URL.createObjectURL(file.raw);\r\n      this.$emit('child-msg', this.imageUrl)\r\n    },\r\n    beforeAvatarUpload(file) {\r\n      const isJPG = (file.type === 'image/jpeg' || file.type==='image/png');\r\n      const isLt2M = file.size / 1024 / 1024 < 10;\r\n\r\n      if (!isJPG) {\r\n        this.$message.error('上传头像图片只能是 JPG 格式!');\r\n      }\r\n       if (!isLt2M) {\r\n        this.$message.error('上传头像图片大小不能超过 10MB!');\r\n      }\r\n      return isJPG && isLt2M;\r\n    },\r\n  }\r\n}\r\n</script>\n\n\n// WEBPACK FOOTER //\n// src/components/share/Upload.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-upload',{staticClass:\"avatar-uploader\",attrs:{\"action\":\"http://47.107.80.19/api/upload/\",\"show-file-list\":false,\"on-success\":_vm.handleAvatarSuccess,\"before-upload\":_vm.beforeAvatarUpload,\"name\":\"userfile\"}},[(_vm.imageUrl)?_c('img',{staticClass:\"avatar\",attrs:{\"src\":_vm.imageUrl,\"id\":\"uploadImage\"}}):_c('i',{staticClass:\"el-icon-plus avatar-uploader-icon\"})])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-17d29d8a\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/share/Upload.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-17d29d8a\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Upload.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Upload.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Upload.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-17d29d8a\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Upload.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/share/Upload.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-main',{staticStyle:{\"text-align\":\"center\"}},[_c('v-header',{attrs:{\"ToolName\":'EXif图片查看器',\"introduction\":'上传原图，立即查看图像隐藏信息'}}),_vm._v(\" \"),_c('div',{staticStyle:{\"margin\":\"100px 10% 50px 10%\",\"text-indent\":\"2em\"}},[_vm._v(\"\\n      选择相机或者手机拍出的图片原图，你会看到图像隐藏了许多个人信息。包括你的拍摄时间、地点、使用的设备，甚至有没有开闪光灯...\\n      \"),_c('br'),_vm._v(\"当然我们测出的数据仅仅是英文版，这里给个链接可以翻译下。\"),_c('a',{attrs:{\"href\":\"http://fanyi.baidu.com\"}},[_vm._v(\"点这里翻译\")])]),_vm._v(\" \"),_c('v-upload',{on:{\"child-msg\":_vm.getpath}}),_vm._v(\" \"),_c('el-button',{staticStyle:{\"margin\":\"20px 0px\"},on:{\"click\":_vm.getExif}},[_vm._v(\"查询\")]),_vm._v(\" \"),_c('div',_vm._l((_vm.data[0]),function(index,item){return _c('el-steps',{attrs:{\"active\":1,\"simple\":\"\"}},[_c('el-step',{attrs:{\"title\":item,\"icon\":\"el-icon-edit\"}}),_vm._v(\" \"),_c('el-step',{attrs:{\"title\":index}})],1)}))],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-4c8f7d0c\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/tools/ExifMain.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-4c8f7d0c\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ExifMain.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ExifMain.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ExifMain.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4c8f7d0c\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./ExifMain.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/tools/ExifMain.vue\n// module id = null\n// module chunks = ","<template>\r\n<el-container class=\"el-carousel\" style=\"height:100%\">\r\n    <v-aside></v-aside>\r\n    <v-main>  </v-main>\r\n  </el-container>  \r\n</template>\r\n<script>\r\nimport aside from \"../share/ElAside\"\r\nimport main from \"./ExifMain\"\r\n\r\nexport default {\r\n  data(){\r\n    return{\r\n      }\r\n    },\r\n  components:{\r\n    \"v-aside\":aside,\r\n    \"v-main\":main\r\n  }\r\n}\r\n</script>\r\n<style>\r\n\r\n</style>\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/tools/Exif.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-container',{staticClass:\"el-carousel\",staticStyle:{\"height\":\"100%\"}},[_c('v-aside'),_vm._v(\" \"),_c('v-main')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-79c41a50\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/tools/Exif.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-79c41a50\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Exif.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Exif.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Exif.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-79c41a50\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Exif.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/tools/Exif.vue\n// module id = null\n// module chunks = ","<template>\r\n  <el-main style=\"text-align: center;\">\r\n    <v-header\r\n      :ToolName=\"'EXif图片查看器'\"\r\n      :introduction=\"'上传原图，立即查看图像隐藏信息'\"\r\n    > </v-header>\r\n    <div style=\"margin:100px 10% 50px 10%;text-indent:2em;\">\r\n      选择相机或者手机拍出的图片原图，你会看到图像隐藏了许多个人信息。包括你的拍摄时间、地点、使用的设备，甚至有没有开闪光灯...\r\n      <br/>当然我们测出的数据仅仅是英文版，这里给个链接可以翻译下。<a href=\"http://fanyi.baidu.com\">点这里翻译</a>\r\n    </div>\r\n    <v-upload @child-msg=\"getpath\"></v-upload>\r\n    <el-button\r\n      style=\"margin:20px 0px;\"\r\n      v-on:click=\"getExif\"\r\n    >查询</el-button>\r\n\r\n    <div>\r\n      <!-- <ul>\r\n        <li v-for=\"(index, item) in data[0]\">\r\n          {{item}} : {{index}}\r\n        </li>\r\n      </ul> -->\r\n<el-steps :active=\"1\"  v-for=\"(index, item) in data[0]\" simple>\r\n  <el-step :title=\"item\" icon=\"el-icon-edit\"></el-step>\r\n  <el-step :title=\"index\"></el-step>\r\n</el-steps>\r\n\r\n    </div>\r\n  </el-main>\r\n</template>\r\n<script>\r\nimport Exif from 'exif-js'\r\n// import api from \"../../assets/api.js\"\r\nimport exifheader from \"./Header\"\r\nimport upload from \"../share/Upload\"\r\nexport default {\r\n  data() {\r\n    return {\r\n      data: [],\r\n      imagepath: \"\"\r\n    }\r\n  },\r\n  methods: {\r\n    getpath(val) {\r\n      this.imagepath = val;\r\n    },\r\n    getExif() {\r\n      var img = $(\"#uploadImage\").get(0);\r\n      if (img == null) {\r\n        this.$message({ message: '你还没添加图片呢！', type: 'warning' });\r\n      }\r\n      else {\r\n        var temp=this.data;\r\n        Exif.getData(img, function () {\r\n          temp.unshift(Exif.getAllTags(this));\r\n          // alert(temp);\r\n          // Exif.pretty(img);\r\n        });\r\n        // this.data.push(temp);\r\n      }\r\n    }\r\n  },\r\n  components: {\r\n    \"v-header\": exifheader,\r\n    \"v-upload\": upload\r\n  }\r\n}\r\n</script>\r\n<style>\r\n</style>\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/tools/ExifMain.vue","(function() {\n\n    var debug = false;\n\n    var root = this;\n\n    var EXIF = function(obj) {\n        if (obj instanceof EXIF) return obj;\n        if (!(this instanceof EXIF)) return new EXIF(obj);\n        this.EXIFwrapped = obj;\n    };\n\n    if (typeof exports !== 'undefined') {\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = EXIF;\n        }\n        exports.EXIF = EXIF;\n    } else {\n        root.EXIF = EXIF;\n    }\n\n    var ExifTags = EXIF.Tags = {\n\n        // version tags\n        0x9000 : \"ExifVersion\",             // EXIF version\n        0xA000 : \"FlashpixVersion\",         // Flashpix format version\n\n        // colorspace tags\n        0xA001 : \"ColorSpace\",              // Color space information tag\n\n        // image configuration\n        0xA002 : \"PixelXDimension\",         // Valid width of meaningful image\n        0xA003 : \"PixelYDimension\",         // Valid height of meaningful image\n        0x9101 : \"ComponentsConfiguration\", // Information about channels\n        0x9102 : \"CompressedBitsPerPixel\",  // Compressed bits per pixel\n\n        // user information\n        0x927C : \"MakerNote\",               // Any desired information written by the manufacturer\n        0x9286 : \"UserComment\",             // Comments by user\n\n        // related file\n        0xA004 : \"RelatedSoundFile\",        // Name of related sound file\n\n        // date and time\n        0x9003 : \"DateTimeOriginal\",        // Date and time when the original image was generated\n        0x9004 : \"DateTimeDigitized\",       // Date and time when the image was stored digitally\n        0x9290 : \"SubsecTime\",              // Fractions of seconds for DateTime\n        0x9291 : \"SubsecTimeOriginal\",      // Fractions of seconds for DateTimeOriginal\n        0x9292 : \"SubsecTimeDigitized\",     // Fractions of seconds for DateTimeDigitized\n\n        // picture-taking conditions\n        0x829A : \"ExposureTime\",            // Exposure time (in seconds)\n        0x829D : \"FNumber\",                 // F number\n        0x8822 : \"ExposureProgram\",         // Exposure program\n        0x8824 : \"SpectralSensitivity\",     // Spectral sensitivity\n        0x8827 : \"ISOSpeedRatings\",         // ISO speed rating\n        0x8828 : \"OECF\",                    // Optoelectric conversion factor\n        0x9201 : \"ShutterSpeedValue\",       // Shutter speed\n        0x9202 : \"ApertureValue\",           // Lens aperture\n        0x9203 : \"BrightnessValue\",         // Value of brightness\n        0x9204 : \"ExposureBias\",            // Exposure bias\n        0x9205 : \"MaxApertureValue\",        // Smallest F number of lens\n        0x9206 : \"SubjectDistance\",         // Distance to subject in meters\n        0x9207 : \"MeteringMode\",            // Metering mode\n        0x9208 : \"LightSource\",             // Kind of light source\n        0x9209 : \"Flash\",                   // Flash status\n        0x9214 : \"SubjectArea\",             // Location and area of main subject\n        0x920A : \"FocalLength\",             // Focal length of the lens in mm\n        0xA20B : \"FlashEnergy\",             // Strobe energy in BCPS\n        0xA20C : \"SpatialFrequencyResponse\",    //\n        0xA20E : \"FocalPlaneXResolution\",   // Number of pixels in width direction per FocalPlaneResolutionUnit\n        0xA20F : \"FocalPlaneYResolution\",   // Number of pixels in height direction per FocalPlaneResolutionUnit\n        0xA210 : \"FocalPlaneResolutionUnit\",    // Unit for measuring FocalPlaneXResolution and FocalPlaneYResolution\n        0xA214 : \"SubjectLocation\",         // Location of subject in image\n        0xA215 : \"ExposureIndex\",           // Exposure index selected on camera\n        0xA217 : \"SensingMethod\",           // Image sensor type\n        0xA300 : \"FileSource\",              // Image source (3 == DSC)\n        0xA301 : \"SceneType\",               // Scene type (1 == directly photographed)\n        0xA302 : \"CFAPattern\",              // Color filter array geometric pattern\n        0xA401 : \"CustomRendered\",          // Special processing\n        0xA402 : \"ExposureMode\",            // Exposure mode\n        0xA403 : \"WhiteBalance\",            // 1 = auto white balance, 2 = manual\n        0xA404 : \"DigitalZoomRation\",       // Digital zoom ratio\n        0xA405 : \"FocalLengthIn35mmFilm\",   // Equivalent foacl length assuming 35mm film camera (in mm)\n        0xA406 : \"SceneCaptureType\",        // Type of scene\n        0xA407 : \"GainControl\",             // Degree of overall image gain adjustment\n        0xA408 : \"Contrast\",                // Direction of contrast processing applied by camera\n        0xA409 : \"Saturation\",              // Direction of saturation processing applied by camera\n        0xA40A : \"Sharpness\",               // Direction of sharpness processing applied by camera\n        0xA40B : \"DeviceSettingDescription\",    //\n        0xA40C : \"SubjectDistanceRange\",    // Distance to subject\n\n        // other tags\n        0xA005 : \"InteroperabilityIFDPointer\",\n        0xA420 : \"ImageUniqueID\"            // Identifier assigned uniquely to each image\n    };\n\n    var TiffTags = EXIF.TiffTags = {\n        0x0100 : \"ImageWidth\",\n        0x0101 : \"ImageHeight\",\n        0x8769 : \"ExifIFDPointer\",\n        0x8825 : \"GPSInfoIFDPointer\",\n        0xA005 : \"InteroperabilityIFDPointer\",\n        0x0102 : \"BitsPerSample\",\n        0x0103 : \"Compression\",\n        0x0106 : \"PhotometricInterpretation\",\n        0x0112 : \"Orientation\",\n        0x0115 : \"SamplesPerPixel\",\n        0x011C : \"PlanarConfiguration\",\n        0x0212 : \"YCbCrSubSampling\",\n        0x0213 : \"YCbCrPositioning\",\n        0x011A : \"XResolution\",\n        0x011B : \"YResolution\",\n        0x0128 : \"ResolutionUnit\",\n        0x0111 : \"StripOffsets\",\n        0x0116 : \"RowsPerStrip\",\n        0x0117 : \"StripByteCounts\",\n        0x0201 : \"JPEGInterchangeFormat\",\n        0x0202 : \"JPEGInterchangeFormatLength\",\n        0x012D : \"TransferFunction\",\n        0x013E : \"WhitePoint\",\n        0x013F : \"PrimaryChromaticities\",\n        0x0211 : \"YCbCrCoefficients\",\n        0x0214 : \"ReferenceBlackWhite\",\n        0x0132 : \"DateTime\",\n        0x010E : \"ImageDescription\",\n        0x010F : \"Make\",\n        0x0110 : \"Model\",\n        0x0131 : \"Software\",\n        0x013B : \"Artist\",\n        0x8298 : \"Copyright\"\n    };\n\n    var GPSTags = EXIF.GPSTags = {\n        0x0000 : \"GPSVersionID\",\n        0x0001 : \"GPSLatitudeRef\",\n        0x0002 : \"GPSLatitude\",\n        0x0003 : \"GPSLongitudeRef\",\n        0x0004 : \"GPSLongitude\",\n        0x0005 : \"GPSAltitudeRef\",\n        0x0006 : \"GPSAltitude\",\n        0x0007 : \"GPSTimeStamp\",\n        0x0008 : \"GPSSatellites\",\n        0x0009 : \"GPSStatus\",\n        0x000A : \"GPSMeasureMode\",\n        0x000B : \"GPSDOP\",\n        0x000C : \"GPSSpeedRef\",\n        0x000D : \"GPSSpeed\",\n        0x000E : \"GPSTrackRef\",\n        0x000F : \"GPSTrack\",\n        0x0010 : \"GPSImgDirectionRef\",\n        0x0011 : \"GPSImgDirection\",\n        0x0012 : \"GPSMapDatum\",\n        0x0013 : \"GPSDestLatitudeRef\",\n        0x0014 : \"GPSDestLatitude\",\n        0x0015 : \"GPSDestLongitudeRef\",\n        0x0016 : \"GPSDestLongitude\",\n        0x0017 : \"GPSDestBearingRef\",\n        0x0018 : \"GPSDestBearing\",\n        0x0019 : \"GPSDestDistanceRef\",\n        0x001A : \"GPSDestDistance\",\n        0x001B : \"GPSProcessingMethod\",\n        0x001C : \"GPSAreaInformation\",\n        0x001D : \"GPSDateStamp\",\n        0x001E : \"GPSDifferential\"\n    };\n\n     // EXIF 2.3 Spec\n    var IFD1Tags = EXIF.IFD1Tags = {\n        0x0100: \"ImageWidth\",\n        0x0101: \"ImageHeight\",\n        0x0102: \"BitsPerSample\",\n        0x0103: \"Compression\",\n        0x0106: \"PhotometricInterpretation\",\n        0x0111: \"StripOffsets\",\n        0x0112: \"Orientation\",\n        0x0115: \"SamplesPerPixel\",\n        0x0116: \"RowsPerStrip\",\n        0x0117: \"StripByteCounts\",\n        0x011A: \"XResolution\",\n        0x011B: \"YResolution\",\n        0x011C: \"PlanarConfiguration\",\n        0x0128: \"ResolutionUnit\",\n        0x0201: \"JpegIFOffset\",    // When image format is JPEG, this value show offset to JPEG data stored.(aka \"ThumbnailOffset\" or \"JPEGInterchangeFormat\")\n        0x0202: \"JpegIFByteCount\", // When image format is JPEG, this value shows data size of JPEG image (aka \"ThumbnailLength\" or \"JPEGInterchangeFormatLength\")\n        0x0211: \"YCbCrCoefficients\",\n        0x0212: \"YCbCrSubSampling\",\n        0x0213: \"YCbCrPositioning\",\n        0x0214: \"ReferenceBlackWhite\"\n    };\n\n    var StringValues = EXIF.StringValues = {\n        ExposureProgram : {\n            0 : \"Not defined\",\n            1 : \"Manual\",\n            2 : \"Normal program\",\n            3 : \"Aperture priority\",\n            4 : \"Shutter priority\",\n            5 : \"Creative program\",\n            6 : \"Action program\",\n            7 : \"Portrait mode\",\n            8 : \"Landscape mode\"\n        },\n        MeteringMode : {\n            0 : \"Unknown\",\n            1 : \"Average\",\n            2 : \"CenterWeightedAverage\",\n            3 : \"Spot\",\n            4 : \"MultiSpot\",\n            5 : \"Pattern\",\n            6 : \"Partial\",\n            255 : \"Other\"\n        },\n        LightSource : {\n            0 : \"Unknown\",\n            1 : \"Daylight\",\n            2 : \"Fluorescent\",\n            3 : \"Tungsten (incandescent light)\",\n            4 : \"Flash\",\n            9 : \"Fine weather\",\n            10 : \"Cloudy weather\",\n            11 : \"Shade\",\n            12 : \"Daylight fluorescent (D 5700 - 7100K)\",\n            13 : \"Day white fluorescent (N 4600 - 5400K)\",\n            14 : \"Cool white fluorescent (W 3900 - 4500K)\",\n            15 : \"White fluorescent (WW 3200 - 3700K)\",\n            17 : \"Standard light A\",\n            18 : \"Standard light B\",\n            19 : \"Standard light C\",\n            20 : \"D55\",\n            21 : \"D65\",\n            22 : \"D75\",\n            23 : \"D50\",\n            24 : \"ISO studio tungsten\",\n            255 : \"Other\"\n        },\n        Flash : {\n            0x0000 : \"Flash did not fire\",\n            0x0001 : \"Flash fired\",\n            0x0005 : \"Strobe return light not detected\",\n            0x0007 : \"Strobe return light detected\",\n            0x0009 : \"Flash fired, compulsory flash mode\",\n            0x000D : \"Flash fired, compulsory flash mode, return light not detected\",\n            0x000F : \"Flash fired, compulsory flash mode, return light detected\",\n            0x0010 : \"Flash did not fire, compulsory flash mode\",\n            0x0018 : \"Flash did not fire, auto mode\",\n            0x0019 : \"Flash fired, auto mode\",\n            0x001D : \"Flash fired, auto mode, return light not detected\",\n            0x001F : \"Flash fired, auto mode, return light detected\",\n            0x0020 : \"No flash function\",\n            0x0041 : \"Flash fired, red-eye reduction mode\",\n            0x0045 : \"Flash fired, red-eye reduction mode, return light not detected\",\n            0x0047 : \"Flash fired, red-eye reduction mode, return light detected\",\n            0x0049 : \"Flash fired, compulsory flash mode, red-eye reduction mode\",\n            0x004D : \"Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected\",\n            0x004F : \"Flash fired, compulsory flash mode, red-eye reduction mode, return light detected\",\n            0x0059 : \"Flash fired, auto mode, red-eye reduction mode\",\n            0x005D : \"Flash fired, auto mode, return light not detected, red-eye reduction mode\",\n            0x005F : \"Flash fired, auto mode, return light detected, red-eye reduction mode\"\n        },\n        SensingMethod : {\n            1 : \"Not defined\",\n            2 : \"One-chip color area sensor\",\n            3 : \"Two-chip color area sensor\",\n            4 : \"Three-chip color area sensor\",\n            5 : \"Color sequential area sensor\",\n            7 : \"Trilinear sensor\",\n            8 : \"Color sequential linear sensor\"\n        },\n        SceneCaptureType : {\n            0 : \"Standard\",\n            1 : \"Landscape\",\n            2 : \"Portrait\",\n            3 : \"Night scene\"\n        },\n        SceneType : {\n            1 : \"Directly photographed\"\n        },\n        CustomRendered : {\n            0 : \"Normal process\",\n            1 : \"Custom process\"\n        },\n        WhiteBalance : {\n            0 : \"Auto white balance\",\n            1 : \"Manual white balance\"\n        },\n        GainControl : {\n            0 : \"None\",\n            1 : \"Low gain up\",\n            2 : \"High gain up\",\n            3 : \"Low gain down\",\n            4 : \"High gain down\"\n        },\n        Contrast : {\n            0 : \"Normal\",\n            1 : \"Soft\",\n            2 : \"Hard\"\n        },\n        Saturation : {\n            0 : \"Normal\",\n            1 : \"Low saturation\",\n            2 : \"High saturation\"\n        },\n        Sharpness : {\n            0 : \"Normal\",\n            1 : \"Soft\",\n            2 : \"Hard\"\n        },\n        SubjectDistanceRange : {\n            0 : \"Unknown\",\n            1 : \"Macro\",\n            2 : \"Close view\",\n            3 : \"Distant view\"\n        },\n        FileSource : {\n            3 : \"DSC\"\n        },\n\n        Components : {\n            0 : \"\",\n            1 : \"Y\",\n            2 : \"Cb\",\n            3 : \"Cr\",\n            4 : \"R\",\n            5 : \"G\",\n            6 : \"B\"\n        }\n    };\n\n    function addEvent(element, event, handler) {\n        if (element.addEventListener) {\n            element.addEventListener(event, handler, false);\n        } else if (element.attachEvent) {\n            element.attachEvent(\"on\" + event, handler);\n        }\n    }\n\n    function imageHasData(img) {\n        return !!(img.exifdata);\n    }\n\n\n    function base64ToArrayBuffer(base64, contentType) {\n        contentType = contentType || base64.match(/^data\\:([^\\;]+)\\;base64,/mi)[1] || ''; // e.g. 'data:image/jpeg;base64,...' => 'image/jpeg'\n        base64 = base64.replace(/^data\\:([^\\;]+)\\;base64,/gmi, '');\n        var binary = atob(base64);\n        var len = binary.length;\n        var buffer = new ArrayBuffer(len);\n        var view = new Uint8Array(buffer);\n        for (var i = 0; i < len; i++) {\n            view[i] = binary.charCodeAt(i);\n        }\n        return buffer;\n    }\n\n    function objectURLToBlob(url, callback) {\n        var http = new XMLHttpRequest();\n        http.open(\"GET\", url, true);\n        http.responseType = \"blob\";\n        http.onload = function(e) {\n            if (this.status == 200 || this.status === 0) {\n                callback(this.response);\n            }\n        };\n        http.send();\n    }\n\n    function getImageData(img, callback) {\n        function handleBinaryFile(binFile) {\n            var data = findEXIFinJPEG(binFile);\n            img.exifdata = data || {};\n            var iptcdata = findIPTCinJPEG(binFile);\n            img.iptcdata = iptcdata || {};\n            if (EXIF.isXmpEnabled) {\n               var xmpdata= findXMPinJPEG(binFile);\n               img.xmpdata = xmpdata || {};               \n            }\n            if (callback) {\n                callback.call(img);\n            }\n        }\n\n        if (img.src) {\n            if (/^data\\:/i.test(img.src)) { // Data URI\n                var arrayBuffer = base64ToArrayBuffer(img.src);\n                handleBinaryFile(arrayBuffer);\n\n            } else if (/^blob\\:/i.test(img.src)) { // Object URL\n                var fileReader = new FileReader();\n                fileReader.onload = function(e) {\n                    handleBinaryFile(e.target.result);\n                };\n                objectURLToBlob(img.src, function (blob) {\n                    fileReader.readAsArrayBuffer(blob);\n                });\n            } else {\n                var http = new XMLHttpRequest();\n                http.onload = function() {\n                    if (this.status == 200 || this.status === 0) {\n                        handleBinaryFile(http.response);\n                    } else {\n                        throw \"Could not load image\";\n                    }\n                    http = null;\n                };\n                http.open(\"GET\", img.src, true);\n                http.responseType = \"arraybuffer\";\n                http.send(null);\n            }\n        } else if (self.FileReader && (img instanceof self.Blob || img instanceof self.File)) {\n            var fileReader = new FileReader();\n            fileReader.onload = function(e) {\n                if (debug) console.log(\"Got file of length \" + e.target.result.byteLength);\n                handleBinaryFile(e.target.result);\n            };\n\n            fileReader.readAsArrayBuffer(img);\n        }\n    }\n\n    function findEXIFinJPEG(file) {\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n            if (debug) console.log(\"Not a valid JPEG\");\n            return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength,\n            marker;\n\n        while (offset < length) {\n            if (dataView.getUint8(offset) != 0xFF) {\n                if (debug) console.log(\"Not a valid marker at offset \" + offset + \", found: \" + dataView.getUint8(offset));\n                return false; // not a valid marker, something is wrong\n            }\n\n            marker = dataView.getUint8(offset + 1);\n            if (debug) console.log(marker);\n\n            // we could implement handling for other markers here,\n            // but we're only looking for 0xFFE1 for EXIF data\n\n            if (marker == 225) {\n                if (debug) console.log(\"Found 0xFFE1 marker\");\n\n                return readEXIFData(dataView, offset + 4, dataView.getUint16(offset + 2) - 2);\n\n                // offset += 2 + file.getShortAt(offset+2, true);\n\n            } else {\n                offset += 2 + dataView.getUint16(offset+2);\n            }\n\n        }\n\n    }\n\n    function findIPTCinJPEG(file) {\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n            if (debug) console.log(\"Not a valid JPEG\");\n            return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength;\n\n\n        var isFieldSegmentStart = function(dataView, offset){\n            return (\n                dataView.getUint8(offset) === 0x38 &&\n                dataView.getUint8(offset+1) === 0x42 &&\n                dataView.getUint8(offset+2) === 0x49 &&\n                dataView.getUint8(offset+3) === 0x4D &&\n                dataView.getUint8(offset+4) === 0x04 &&\n                dataView.getUint8(offset+5) === 0x04\n            );\n        };\n\n        while (offset < length) {\n\n            if ( isFieldSegmentStart(dataView, offset )){\n\n                // Get the length of the name header (which is padded to an even number of bytes)\n                var nameHeaderLength = dataView.getUint8(offset+7);\n                if(nameHeaderLength % 2 !== 0) nameHeaderLength += 1;\n                // Check for pre photoshop 6 format\n                if(nameHeaderLength === 0) {\n                    // Always 4\n                    nameHeaderLength = 4;\n                }\n\n                var startOffset = offset + 8 + nameHeaderLength;\n                var sectionLength = dataView.getUint16(offset + 6 + nameHeaderLength);\n\n                return readIPTCData(file, startOffset, sectionLength);\n\n                break;\n\n            }\n\n\n            // Not the marker, continue searching\n            offset++;\n\n        }\n\n    }\n    var IptcFieldMap = {\n        0x78 : 'caption',\n        0x6E : 'credit',\n        0x19 : 'keywords',\n        0x37 : 'dateCreated',\n        0x50 : 'byline',\n        0x55 : 'bylineTitle',\n        0x7A : 'captionWriter',\n        0x69 : 'headline',\n        0x74 : 'copyright',\n        0x0F : 'category'\n    };\n    function readIPTCData(file, startOffset, sectionLength){\n        var dataView = new DataView(file);\n        var data = {};\n        var fieldValue, fieldName, dataSize, segmentType, segmentSize;\n        var segmentStartPos = startOffset;\n        while(segmentStartPos < startOffset+sectionLength) {\n            if(dataView.getUint8(segmentStartPos) === 0x1C && dataView.getUint8(segmentStartPos+1) === 0x02){\n                segmentType = dataView.getUint8(segmentStartPos+2);\n                if(segmentType in IptcFieldMap) {\n                    dataSize = dataView.getInt16(segmentStartPos+3);\n                    segmentSize = dataSize + 5;\n                    fieldName = IptcFieldMap[segmentType];\n                    fieldValue = getStringFromDB(dataView, segmentStartPos+5, dataSize);\n                    // Check if we already stored a value with this name\n                    if(data.hasOwnProperty(fieldName)) {\n                        // Value already stored with this name, create multivalue field\n                        if(data[fieldName] instanceof Array) {\n                            data[fieldName].push(fieldValue);\n                        }\n                        else {\n                            data[fieldName] = [data[fieldName], fieldValue];\n                        }\n                    }\n                    else {\n                        data[fieldName] = fieldValue;\n                    }\n                }\n\n            }\n            segmentStartPos++;\n        }\n        return data;\n    }\n\n\n\n    function readTags(file, tiffStart, dirStart, strings, bigEnd) {\n        var entries = file.getUint16(dirStart, !bigEnd),\n            tags = {},\n            entryOffset, tag,\n            i;\n\n        for (i=0;i<entries;i++) {\n            entryOffset = dirStart + i*12 + 2;\n            tag = strings[file.getUint16(entryOffset, !bigEnd)];\n            if (!tag && debug) console.log(\"Unknown tag: \" + file.getUint16(entryOffset, !bigEnd));\n            tags[tag] = readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd);\n        }\n        return tags;\n    }\n\n\n    function readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd) {\n        var type = file.getUint16(entryOffset+2, !bigEnd),\n            numValues = file.getUint32(entryOffset+4, !bigEnd),\n            valueOffset = file.getUint32(entryOffset+8, !bigEnd) + tiffStart,\n            offset,\n            vals, val, n,\n            numerator, denominator;\n\n        switch (type) {\n            case 1: // byte, 8-bit unsigned int\n            case 7: // undefined, 8-bit byte, value depending on field\n                if (numValues == 1) {\n                    return file.getUint8(entryOffset + 8, !bigEnd);\n                } else {\n                    offset = numValues > 4 ? valueOffset : (entryOffset + 8);\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint8(offset + n);\n                    }\n                    return vals;\n                }\n\n            case 2: // ascii, 8-bit byte\n                offset = numValues > 4 ? valueOffset : (entryOffset + 8);\n                return getStringFromDB(file, offset, numValues-1);\n\n            case 3: // short, 16 bit int\n                if (numValues == 1) {\n                    return file.getUint16(entryOffset + 8, !bigEnd);\n                } else {\n                    offset = numValues > 2 ? valueOffset : (entryOffset + 8);\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint16(offset + 2*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 4: // long, 32 bit int\n                if (numValues == 1) {\n                    return file.getUint32(entryOffset + 8, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint32(valueOffset + 4*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 5:    // rational = two long values, first is numerator, second is denominator\n                if (numValues == 1) {\n                    numerator = file.getUint32(valueOffset, !bigEnd);\n                    denominator = file.getUint32(valueOffset+4, !bigEnd);\n                    val = new Number(numerator / denominator);\n                    val.numerator = numerator;\n                    val.denominator = denominator;\n                    return val;\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        numerator = file.getUint32(valueOffset + 8*n, !bigEnd);\n                        denominator = file.getUint32(valueOffset+4 + 8*n, !bigEnd);\n                        vals[n] = new Number(numerator / denominator);\n                        vals[n].numerator = numerator;\n                        vals[n].denominator = denominator;\n                    }\n                    return vals;\n                }\n\n            case 9: // slong, 32 bit signed int\n                if (numValues == 1) {\n                    return file.getInt32(entryOffset + 8, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getInt32(valueOffset + 4*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 10: // signed rational, two slongs, first is numerator, second is denominator\n                if (numValues == 1) {\n                    return file.getInt32(valueOffset, !bigEnd) / file.getInt32(valueOffset+4, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getInt32(valueOffset + 8*n, !bigEnd) / file.getInt32(valueOffset+4 + 8*n, !bigEnd);\n                    }\n                    return vals;\n                }\n        }\n    }\n\n    /**\n    * Given an IFD (Image File Directory) start offset\n    * returns an offset to next IFD or 0 if it's the last IFD.\n    */\n    function getNextIFDOffset(dataView, dirStart, bigEnd){\n        //the first 2bytes means the number of directory entries contains in this IFD\n        var entries = dataView.getUint16(dirStart, !bigEnd);\n\n        // After last directory entry, there is a 4bytes of data,\n        // it means an offset to next IFD.\n        // If its value is '0x00000000', it means this is the last IFD and there is no linked IFD.\n\n        return dataView.getUint32(dirStart + 2 + entries * 12, !bigEnd); // each entry is 12 bytes long\n    }\n\n    function readThumbnailImage(dataView, tiffStart, firstIFDOffset, bigEnd){\n        // get the IFD1 offset\n        var IFD1OffsetPointer = getNextIFDOffset(dataView, tiffStart+firstIFDOffset, bigEnd);\n\n        if (!IFD1OffsetPointer) {\n            // console.log('******** IFD1Offset is empty, image thumb not found ********');\n            return {};\n        }\n        else if (IFD1OffsetPointer > dataView.byteLength) { // this should not happen\n            // console.log('******** IFD1Offset is outside the bounds of the DataView ********');\n            return {};\n        }\n        // console.log('*******  thumbnail IFD offset (IFD1) is: %s', IFD1OffsetPointer);\n\n        var thumbTags = readTags(dataView, tiffStart, tiffStart + IFD1OffsetPointer, IFD1Tags, bigEnd)\n\n        // EXIF 2.3 specification for JPEG format thumbnail\n\n        // If the value of Compression(0x0103) Tag in IFD1 is '6', thumbnail image format is JPEG.\n        // Most of Exif image uses JPEG format for thumbnail. In that case, you can get offset of thumbnail\n        // by JpegIFOffset(0x0201) Tag in IFD1, size of thumbnail by JpegIFByteCount(0x0202) Tag.\n        // Data format is ordinary JPEG format, starts from 0xFFD8 and ends by 0xFFD9. It seems that\n        // JPEG format and 160x120pixels of size are recommended thumbnail format for Exif2.1 or later.\n\n        if (thumbTags['Compression']) {\n            // console.log('Thumbnail image found!');\n\n            switch (thumbTags['Compression']) {\n                case 6:\n                    // console.log('Thumbnail image format is JPEG');\n                    if (thumbTags.JpegIFOffset && thumbTags.JpegIFByteCount) {\n                    // extract the thumbnail\n                        var tOffset = tiffStart + thumbTags.JpegIFOffset;\n                        var tLength = thumbTags.JpegIFByteCount;\n                        thumbTags['blob'] = new Blob([new Uint8Array(dataView.buffer, tOffset, tLength)], {\n                            type: 'image/jpeg'\n                        });\n                    }\n                break;\n\n            case 1:\n                console.log(\"Thumbnail image format is TIFF, which is not implemented.\");\n                break;\n            default:\n                console.log(\"Unknown thumbnail image format '%s'\", thumbTags['Compression']);\n            }\n        }\n        else if (thumbTags['PhotometricInterpretation'] == 2) {\n            console.log(\"Thumbnail image format is RGB, which is not implemented.\");\n        }\n        return thumbTags;\n    }\n\n    function getStringFromDB(buffer, start, length) {\n        var outstr = \"\";\n        for (n = start; n < start+length; n++) {\n            outstr += String.fromCharCode(buffer.getUint8(n));\n        }\n        return outstr;\n    }\n\n    function readEXIFData(file, start) {\n        if (getStringFromDB(file, start, 4) != \"Exif\") {\n            if (debug) console.log(\"Not valid EXIF data! \" + getStringFromDB(file, start, 4));\n            return false;\n        }\n\n        var bigEnd,\n            tags, tag,\n            exifData, gpsData,\n            tiffOffset = start + 6;\n\n        // test for TIFF validity and endianness\n        if (file.getUint16(tiffOffset) == 0x4949) {\n            bigEnd = false;\n        } else if (file.getUint16(tiffOffset) == 0x4D4D) {\n            bigEnd = true;\n        } else {\n            if (debug) console.log(\"Not valid TIFF data! (no 0x4949 or 0x4D4D)\");\n            return false;\n        }\n\n        if (file.getUint16(tiffOffset+2, !bigEnd) != 0x002A) {\n            if (debug) console.log(\"Not valid TIFF data! (no 0x002A)\");\n            return false;\n        }\n\n        var firstIFDOffset = file.getUint32(tiffOffset+4, !bigEnd);\n\n        if (firstIFDOffset < 0x00000008) {\n            if (debug) console.log(\"Not valid TIFF data! (First offset less than 8)\", file.getUint32(tiffOffset+4, !bigEnd));\n            return false;\n        }\n\n        tags = readTags(file, tiffOffset, tiffOffset + firstIFDOffset, TiffTags, bigEnd);\n\n        if (tags.ExifIFDPointer) {\n            exifData = readTags(file, tiffOffset, tiffOffset + tags.ExifIFDPointer, ExifTags, bigEnd);\n            for (tag in exifData) {\n                switch (tag) {\n                    case \"LightSource\" :\n                    case \"Flash\" :\n                    case \"MeteringMode\" :\n                    case \"ExposureProgram\" :\n                    case \"SensingMethod\" :\n                    case \"SceneCaptureType\" :\n                    case \"SceneType\" :\n                    case \"CustomRendered\" :\n                    case \"WhiteBalance\" :\n                    case \"GainControl\" :\n                    case \"Contrast\" :\n                    case \"Saturation\" :\n                    case \"Sharpness\" :\n                    case \"SubjectDistanceRange\" :\n                    case \"FileSource\" :\n                        exifData[tag] = StringValues[tag][exifData[tag]];\n                        break;\n\n                    case \"ExifVersion\" :\n                    case \"FlashpixVersion\" :\n                        exifData[tag] = String.fromCharCode(exifData[tag][0], exifData[tag][1], exifData[tag][2], exifData[tag][3]);\n                        break;\n\n                    case \"ComponentsConfiguration\" :\n                        exifData[tag] =\n                            StringValues.Components[exifData[tag][0]] +\n                            StringValues.Components[exifData[tag][1]] +\n                            StringValues.Components[exifData[tag][2]] +\n                            StringValues.Components[exifData[tag][3]];\n                        break;\n                }\n                tags[tag] = exifData[tag];\n            }\n        }\n\n        if (tags.GPSInfoIFDPointer) {\n            gpsData = readTags(file, tiffOffset, tiffOffset + tags.GPSInfoIFDPointer, GPSTags, bigEnd);\n            for (tag in gpsData) {\n                switch (tag) {\n                    case \"GPSVersionID\" :\n                        gpsData[tag] = gpsData[tag][0] +\n                            \".\" + gpsData[tag][1] +\n                            \".\" + gpsData[tag][2] +\n                            \".\" + gpsData[tag][3];\n                        break;\n                }\n                tags[tag] = gpsData[tag];\n            }\n        }\n\n        // extract thumbnail\n        tags['thumbnail'] = readThumbnailImage(file, tiffOffset, firstIFDOffset, bigEnd);\n\n        return tags;\n    }\n\n   function findXMPinJPEG(file) {\n\n        if (!('DOMParser' in self)) {\n            // console.warn('XML parsing not supported without DOMParser');\n            return;\n        }\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n           if (debug) console.log(\"Not a valid JPEG\");\n           return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength,\n            dom = new DOMParser();\n\n        while (offset < (length-4)) {\n            if (getStringFromDB(dataView, offset, 4) == \"http\") {\n                var startOffset = offset - 1;\n                var sectionLength = dataView.getUint16(offset - 2) - 1;\n                var xmpString = getStringFromDB(dataView, startOffset, sectionLength)\n                var xmpEndIndex = xmpString.indexOf('xmpmeta>') + 8;\n                xmpString = xmpString.substring( xmpString.indexOf( '<x:xmpmeta' ), xmpEndIndex );\n\n                var indexOfXmp = xmpString.indexOf('x:xmpmeta') + 10\n                //Many custom written programs embed xmp/xml without any namespace. Following are some of them.\n                //Without these namespaces, XML is thought to be invalid by parsers\n                xmpString = xmpString.slice(0, indexOfXmp)\n                            + 'xmlns:Iptc4xmpCore=\"http://iptc.org/std/Iptc4xmpCore/1.0/xmlns/\" '\n                            + 'xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" '\n                            + 'xmlns:tiff=\"http://ns.adobe.com/tiff/1.0/\" '\n                            + 'xmlns:plus=\"http://schemas.android.com/apk/lib/com.google.android.gms.plus\" '\n                            + 'xmlns:ext=\"http://www.gettyimages.com/xsltExtension/1.0\" '\n                            + 'xmlns:exif=\"http://ns.adobe.com/exif/1.0/\" '\n                            + 'xmlns:stEvt=\"http://ns.adobe.com/xap/1.0/sType/ResourceEvent#\" '\n                            + 'xmlns:stRef=\"http://ns.adobe.com/xap/1.0/sType/ResourceRef#\" '\n                            + 'xmlns:crs=\"http://ns.adobe.com/camera-raw-settings/1.0/\" '\n                            + 'xmlns:xapGImg=\"http://ns.adobe.com/xap/1.0/g/img/\" '\n                            + 'xmlns:Iptc4xmpExt=\"http://iptc.org/std/Iptc4xmpExt/2008-02-29/\" '\n                            + xmpString.slice(indexOfXmp)\n\n                var domDocument = dom.parseFromString( xmpString, 'text/xml' );\n                return xml2Object(domDocument);\n            } else{\n             offset++;\n            }\n        }\n    }\n\n    function xml2json(xml) {\n        var json = {};\n      \n        if (xml.nodeType == 1) { // element node\n          if (xml.attributes.length > 0) {\n            json['@attributes'] = {};\n            for (var j = 0; j < xml.attributes.length; j++) {\n              var attribute = xml.attributes.item(j);\n              json['@attributes'][attribute.nodeName] = attribute.nodeValue;\n            }\n          }\n        } else if (xml.nodeType == 3) { // text node\n          return xml.nodeValue;\n        }\n      \n        // deal with children\n        if (xml.hasChildNodes()) {\n          for(var i = 0; i < xml.childNodes.length; i++) {\n            var child = xml.childNodes.item(i);\n            var nodeName = child.nodeName;\n            if (json[nodeName] == null) {\n              json[nodeName] = xml2json(child);\n            } else {\n              if (json[nodeName].push == null) {\n                var old = json[nodeName];\n                json[nodeName] = [];\n                json[nodeName].push(old);\n              }\n              json[nodeName].push(xml2json(child));\n            }\n          }\n        }\n        \n        return json;\n    }\n\n    function xml2Object(xml) {\n        try {\n            var obj = {};\n            if (xml.children.length > 0) {\n              for (var i = 0; i < xml.children.length; i++) {\n                var item = xml.children.item(i);\n                var attributes = item.attributes;\n                for(var idx in attributes) {\n                    var itemAtt = attributes[idx];\n                    var dataKey = itemAtt.nodeName;\n                    var dataValue = itemAtt.nodeValue;\n\n                    if(dataKey !== undefined) {\n                        obj[dataKey] = dataValue;\n                    }\n                }\n                var nodeName = item.nodeName;\n\n                if (typeof (obj[nodeName]) == \"undefined\") {\n                  obj[nodeName] = xml2json(item);\n                } else {\n                  if (typeof (obj[nodeName].push) == \"undefined\") {\n                    var old = obj[nodeName];\n\n                    obj[nodeName] = [];\n                    obj[nodeName].push(old);\n                  }\n                  obj[nodeName].push(xml2json(item));\n                }\n              }\n            } else {\n              obj = xml.textContent;\n            }\n            return obj;\n          } catch (e) {\n              console.log(e.message);\n          }\n    }\n\n    EXIF.enableXmp = function() {\n        EXIF.isXmpEnabled = true;\n    }\n\n    EXIF.disableXmp = function() {\n        EXIF.isXmpEnabled = false;\n    }\n\n    EXIF.getData = function(img, callback) {\n        if (((self.Image && img instanceof self.Image)\n            || (self.HTMLImageElement && img instanceof self.HTMLImageElement))\n            && !img.complete)\n            return false;\n\n        if (!imageHasData(img)) {\n            getImageData(img, callback);\n        } else {\n            if (callback) {\n                callback.call(img);\n            }\n        }\n        return true;\n    }\n\n    EXIF.getTag = function(img, tag) {\n        if (!imageHasData(img)) return;\n        return img.exifdata[tag];\n    }\n    \n    EXIF.getIptcTag = function(img, tag) {\n        if (!imageHasData(img)) return;\n        return img.iptcdata[tag];\n    }\n\n    EXIF.getAllTags = function(img) {\n        if (!imageHasData(img)) return {};\n        var a,\n            data = img.exifdata,\n            tags = {};\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                tags[a] = data[a];\n            }\n        }\n        return tags;\n    }\n    \n    EXIF.getAllIptcTags = function(img) {\n        if (!imageHasData(img)) return {};\n        var a,\n            data = img.iptcdata,\n            tags = {};\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                tags[a] = data[a];\n            }\n        }\n        return tags;\n    }\n\n    EXIF.pretty = function(img) {\n        if (!imageHasData(img)) return \"\";\n        var a,\n            data = img.exifdata,\n            strPretty = \"\";\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                if (typeof data[a] == \"object\") {\n                    if (data[a] instanceof Number) {\n                        strPretty += a + \" : \" + data[a] + \" [\" + data[a].numerator + \"/\" + data[a].denominator + \"]\\r\\n\";\n                    } else {\n                        strPretty += a + \" : [\" + data[a].length + \" values]\\r\\n\";\n                    }\n                } else {\n                    strPretty += a + \" : \" + data[a] + \"\\r\\n\";\n                }\n            }\n        }\n        return strPretty;\n    }\n\n    EXIF.readFromBinaryFile = function(file) {\n        return findEXIFinJPEG(file);\n    }\n\n    if (typeof define === 'function' && define.amd) {\n        define('exif-js', [], function() {\n            return EXIF;\n        });\n    }\n}.call(this));\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/exif-js/exif.js\n// module id = sbrb\n// module chunks = 1"],"sourceRoot":""}